{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/browser-action/browser-action.page.ts","./src/app/browser-action/browser-action.page.html","./src/app/common/action-bar/action-bar.component.ts","./src/app/common/action-bar/action-bar.component.html","./src/app/common/bases/ibgib-component-base.ts","./src/app/common/constants.ts","./src/app/page-selector.guard.ts","./src/app/services/common.service.ts","./src/app/services/files.service.ts","./src/app/services/ibgibs.service.ts","./src/app/services/ng-ibgib-nav.service.ts","./src/app/sidebar/sidebar.page.ts","./src/app/sidebar/sidebar.page.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BrowserActionPage } from './browser-action/browser-action.page';\nimport { PageSelectorGuard } from './page-selector.guard';\nimport { SidebarPage } from './sidebar/sidebar.page';\n\nconst routes: Routes = [\n  // {\n  //   path: '',\n  //   component: BrowserActionPage,\n  //   pathMatch: \"full\",\n  // },\n  // {\n  //   path: 'browser-action',\n  //   component: BrowserActionPage,\n  // },\n  {\n    path: 'sidebar',\n    redirectTo: 'ibgib/ib^gib',\n    // component: SidebarPage,\n  },\n    {\n    path: '',\n    redirectTo: 'ibgib/ib^gib',\n    pathMatch: 'full'\n  },\n  {\n    path: 'ibgib/:addr',\n    component: SidebarPage,\n    // loadChildren: () => import('./ibgib/ibgib.module').then( m => m.IbGibPageModule)\n  },\n  { \n    path: '**', \n    component: SidebarPage,\n    canActivate: [PageSelectorGuard],\n  }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\nconsole.log(`app component file executed`)\n\n@Component({\n  selector: 'ibgib-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'webext-gib';\n\n  constructor() {\n    console.log(`app component created`)\n  }\n}\n","<p>app html</p>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserActionPage } from './browser-action/browser-action.page';\nimport { SidebarPage } from './sidebar/sidebar.page';\nimport { NgIbgibNavService } from './services/ng-ibgib-nav.service';\nimport { ActionBarComponent } from './common/action-bar/action-bar.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ActionBarComponent,\n    BrowserActionPage,\n    SidebarPage,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [\n    {\n      provide: 'IbgibNav',\n      useClass: NgIbgibNavService,\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Plugins } from '@capacitor/core';\n\n@Component({\n  selector: 'ibgib-browser-action',\n  templateUrl: './browser-action.page.html',\n  styleUrls: ['./browser-action.page.scss']\n})\nexport class BrowserActionPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>browser-action works!</p>\n","import { Component, OnInit, ChangeDetectorRef, Input } from '@angular/core';\nimport { Plugins, Camera, CameraResultType } from '@capacitor/core';\nconst { Modals } = Plugins;\nimport { IbgibComponentBase } from '../bases/ibgib-component-base';\nimport { CommonService } from 'src/app/services/common.service';\nimport { IbGibAddr, IbGibRel8ns, V1 } from 'ts-gib';\nimport { ActionItem, PicData, CommentData } from '../types';\nimport { hash, getIbGibAddr, getTimestamp, getIbAndGib, pretty } from 'ts-gib/dist/helper';\nimport { Factory_V1 as factory } from 'ts-gib/dist/V1';\n\n\n@Component({\n  selector: 'action-bar',\n  templateUrl: './action-bar.component.html',\n  styleUrls: ['./action-bar.component.scss'],\n})\nexport class ActionBarComponent\n  extends IbgibComponentBase\n  implements OnInit {\n\n  protected lc = `[${ActionBarComponent.name}]`;\n\n  @Input()\n  get addr(): IbGibAddr { return super.addr; }\n  set addr(value: IbGibAddr) { super.addr = value; }\n\n  /**\n   * temporary hack\n   */\n  DEFAULT_ACTIONS: ActionItem[] = [\n    {\n      type: 'button',\n      text: 'comment',\n      icon: 'chatbox-outline',\n      handler: async (event) => await this.actionAddComment(event),\n    },\n    {\n      type: 'button',\n      text: 'camera',\n      icon: 'camera-outline',\n      handler: async (event) => await this.actionAddPic(event),\n    },\n    {\n      type: 'inputfile',\n      text: 'image',\n      icon: 'image-outline',\n      filepicked: async (event) => await this.actionAddImage(event),\n    },\n    {\n      type: 'button',\n      text: 'tag',\n      icon: 'pricetag-outline',\n      handler: async (event) => await this.actionTag(event),\n    },\n  ];\n\n  @Input()\n  items: ActionItem[] = this.DEFAULT_ACTIONS.concat();\n\n  constructor(\n    protected common: CommonService,\n    protected ref: ChangeDetectorRef,\n  ) {\n    super(common, ref);\n  }\n\n  ngOnInit() { }\n\n  async updateIbGib(addr: IbGibAddr): Promise<void> {\n    const lc = `${this.lc}[${this.updateIbGib.name}(${addr})]`;\n    console.log(`${lc} updating.`)\n    await super.updateIbGib(addr);\n    await this.updateActions();\n  }\n\n  async updateActions(): Promise<void> {\n    this.items = this.DEFAULT_ACTIONS.concat(); // dev only\n  }\n\n  async actionAddComment(event: MouseEvent): Promise<void> {\n    const lc = `${this.lc}[${this.actionAddComment.name}]`;\n    try {\n      console.log(`${lc} __`);\n      const resComment = await Modals.prompt({\n        title: 'comment',\n        message: 'add text',\n        inputPlaceholder: 'text here',\n      });\n      console.log(`${lc} 1`);\n      if (resComment.cancelled || !resComment.value) { return; }\n      const text = resComment.value.trim();\n      console.log(`${lc} text: ${text}`);\n      const data: CommentData = { text, textTimestamp: getTimestamp() };\n\n      console.log(`${lc} 2a`);\n      // create an ibgib with the filename and ext\n      const opts:any = {\n        parentIbGib: factory.primitive({ib: 'comment'}),\n        ib: `comment ${text.length > 10 ? text.substring(0,10) : text}`,\n        data,\n        dna: true,\n        tpj: { uuid: true }\n      };\n\n      if (this.addr) {\n        opts.rel8ns = { 'comment on': [this.addr] };\n      }\n\n      console.log(`${lc} opts: ${pretty(opts)}`);\n      const resCommentIbGib = await factory.firstGen(opts);\n      console.log(`${lc} 2b`);\n      await this.common.ibgibs.persistTransformResult({resTransform: resCommentIbGib});\n      console.log(`${lc} 2c`);\n      const { newIbGib: newComment } = resCommentIbGib;\n      const newCommentAddr = getIbGibAddr({ibGib: newComment});\n      // need to nav to picture if not in a context, or\n      // or if in context need to rel8 to the context.\n\n      console.log(`${lc} 3`);\n      let navToAddr: string;\n      if (this.addr) {\n        // if we have a context, rel8 to it\n        if (!this.ibGib) { await this.loadIbGib(); }\n        const rel8nsToAddByAddr = { comment: [newCommentAddr] };\n        const resRel8ToContext =\n          await V1.rel8({src: this.ibGib, rel8nsToAddByAddr, dna: true});\n        await this.common.ibgibs.persistTransformResult({resTransform: resRel8ToContext});\n        const { newIbGib: newContext } = resRel8ToContext;\n        const newContextAddr = getIbGibAddr(newContext);\n\n        console.log(`${lc} 4`);\n        // nav to either the pic we just added, or the new context \"in time\"\n        // to which the pic was added.\n        navToAddr = this.isMeta ?\n          getIbGibAddr({ibGib: newComment}) :\n          getIbGibAddr({ibGib: newContext});\n      } else {\n        navToAddr = getIbGibAddr({ibGib: newComment});\n      }\n      await this.navTo({addr: navToAddr});\n\n    } catch (error) {\n      console.error(`${lc} ${error.message}`)\n    }\n  }\n\n  /**\n   * shared pic code between camera and loading image via picking a file.\n   */\n  async doPic({\n    imageBase64,\n    binHash,\n    filename,\n    ext,\n  }: {\n    imageBase64: string,\n    binHash: string,\n    filename?: string,\n    ext?: string,\n  }): Promise<void> {\n    const lc = `${this.lc}[${this.doPic.name}]`;\n\n      const resSavePic =\n        await this.files.put({binData: imageBase64, binExt: ext});\n        // await this.files.put({binData: image.base64String, binExt: ext});\n      if (!resSavePic.success) { throw new Error(resSavePic.errorMsg || 'error saving pic'); }\n      if (!resSavePic.binHash) { throw new Error(resSavePic.errorMsg || 'no bin hash created'); }\n\n      // todo: do thumbnail also\n\n      // NOTE: This is not the same filename that is saved in the bin folder!\n      // This is for when the picture is downloaded outside of the ibGib system\n      // or for display purposes.\n      const timestamp = (new Date).toUTCString();\n      filename = filename || timestamp\n        .replace(':', '-')\n        .replace(':', '-')\n        .replace(',', '')\n        // .replace(new RegExp(/\\W/), '') // any remaining-non-word chars\n        ; // temporary eek.\n\n      console.log(`${lc} binHash: ${binHash}`);\n      console.log(`${lc} ext: ${ext}`);\n      const data: PicData = { binHash, ext, filename, timestamp };\n      const rel8ns: IbGibRel8ns = { 'pic on': [this.addr] };\n\n      // create an ibgib with the filename and ext\n      const resPicIbGib = await factory.firstGen({\n        parentIbGib: factory.primitive({ib: 'pic'}),\n        ib: `pic ${binHash}`,\n        data,\n        rel8ns,\n        dna: true,\n        tpj: { uuid: true }\n      });\n      await this.common.ibgibs.persistTransformResult({resTransform: resPicIbGib});\n      const { newIbGib: newPic } = resPicIbGib;\n      const newPicAddr = getIbGibAddr({ibGib: newPic});\n      // need to nav to picture if not in a context, or\n      // or if in context need to rel8 to the context.\n\n      // rel8 to context\n      if (!this.ibGib) { await this.loadIbGib(); }\n      const rel8nsToAddByAddr = { pic: [newPicAddr] };\n      const resRel8ToContext =\n        await V1.rel8({src: this.ibGib, rel8nsToAddByAddr, dna: true});\n      await this.common.ibgibs.persistTransformResult({resTransform: resRel8ToContext});\n      const { newIbGib: newContext } = resRel8ToContext;\n      const newContextAddr = getIbGibAddr(newContext);\n\n      // nav to either the pic we just added, or the new context \"in time\"\n      // to which the pic was added.\n      const navToAddr = this.isMeta ?\n        getIbGibAddr({ibGib: newPic}) :\n        getIbGibAddr({ibGib: newContext});\n      await this.navTo({addr: navToAddr});\n  }\n\n  /**\n   * Horrifically large function to add a picture,\n   * create the ibgib, save, etc.\n   *\n   * Must refactor this at a later time though.\n   */\n  async actionAddPic(event: MouseEvent): Promise<void> {\n    const lc = `${this.lc}[${this.actionAddPic.name}]`;\n    try {\n      // get the image from the camera\n      const image = await Camera.getPhoto({\n        quality: 90,\n        allowEditing: false,\n        resultType: CameraResultType.Base64,\n      });\n      // save the image bin data\n      // get the hash of the image\n      const binHash = await hash({s: image.base64String});\n      const ext = image.format;\n\n      await this.doPic({imageBase64: image.base64String, binHash, ext});\n    } catch (error) {\n      console.error(`${lc} ${error.message}`)\n    }\n  }\n\n\n  getExt(path: string): { filename: string, ext: string } {\n    const pathPieces = path.split('/');\n    const fullFilename = pathPieces[pathPieces.length-1];\n    if (fullFilename.includes('.') && !fullFilename.endsWith('.')) {\n      const lastDotIndex = fullFilename.lastIndexOf('.');\n      return {\n        filename: fullFilename.slice(0, lastDotIndex),\n        ext: fullFilename.slice(lastDotIndex+1),\n      };\n    } else {\n      return {filename: fullFilename, ext: \"\"}\n    }\n  }\n\n  async actionAddImage(event: any): Promise<void> {\n\n    // await Modals.alert({title: 'file', message: `picked a file yo`});\n    // thanks https://edupala.com/capacitor-camera-example/\n    const file = (event.target as HTMLInputElement).files[0];\n    const pattern = /image-*/;\n    const reader = new FileReader();\n\n    if (!file.type.match(pattern)) {\n      console.log('File format not supported');\n      return;\n    }\n\n    reader.onload = async (f: any) => {\n      let imageBase64 = reader.result.toString().split('base64,')[1];\n      let binHash = await hash({s: imageBase64});\n      const filenameWithExt = file.name;\n      const filenamePieces = filenameWithExt.split('.');\n      const filename = filenamePieces.slice(0, filenamePieces.length-1).join('.');\n      const ext = filenamePieces.slice(filenamePieces.length-1)[0];\n\n      await this.doPic({imageBase64, binHash, filename, ext});\n    };\n    reader.readAsDataURL(file);\n  }\n\n  async actionTag(event: MouseEvent): Promise<void> {\n    const lc = `${this.lc}[${this.actionTag.name}]`;\n    try {\n      const tagsIbGib = await this.common.ibgibs.getTagsIbgib({initialize: false});\n      const tagAddrs = tagsIbGib.rel8ns.tag;\n      const tagOptions = tagAddrs.map(addr => {\n        const { ib } = getIbAndGib({ibGibAddr: addr});\n        const tag = ib.substring('tag '.length);\n        return { title: tag };\n      });\n      let resPrompt = await Modals.showActions({\n        title: 'Select tag',\n        message: 'Select a tag to add this ibGib to',\n        options: [{title: 'Cancel Tag'}, ...tagOptions]\n      });\n\n      if (resPrompt.index > 0) {\n        await Plugins.Modals.alert({title: 'selected', message: tagOptions[resPrompt.index-1].title});\n      } else {\n        await Plugins.Modals.alert({title: 'nope', message: 'cancelled'});\n      }\n\n    } catch (error) {\n      console.error(`${lc} ${error.message}`)\n    }\n  }\n}\n","<div *ngFor='let item of items'>\n  <ion-button *ngIf='item.type === \"button\"'\n    color=\"primary\" shape=\"round\"\n    (click)='item.handler($event)'>\n    <ion-icon slot=\"start\" [name]=\"item.icon\"></ion-icon>\n    <!-- {{ item.text }} -->\n  </ion-button>\n\n  <ion-button *ngIf='item.type === \"inputfile\"' color=\"primary\" shape=\"round\"\n    (click)='inputyo.click()'>\n\n    <ion-icon slot=\"start\" [name]=\"item.icon\"></ion-icon>\n\n    <!-- {{ item.text }} -->\n\n    <input #inputyo type=\"file\" hidden (change)='item.filepicked($event)'/>\n\n  </ion-button>\n\n</div>","import { Component, OnInit, OnDestroy, Input, ChangeDetectorRef } from '@angular/core';\nimport { IbGib_V1, GIB, Factory_V1, Rel8n } from \"ts-gib/dist/V1\";\nimport { IbGibAddr, Ib, Gib, V1, TransformResult } from \"ts-gib\";\nimport { getIbAndGib, getIbGibAddr } from \"ts-gib/dist/helper\";\nimport { Injectable } from \"@angular/core\";\nimport { FilesService } from 'src/app/services/files.service';\nimport { IbgibItem, PicData, CommentData } from '../types';\nimport { CommonService } from 'src/app/services/common.service';\nimport { DEFAULT_META_IB_STARTS } from '../constants';\n\n// @Injectable({providedIn: \"root\"})\n@Injectable()\nexport abstract class IbgibComponentBase<TItem extends IbgibItem = IbgibItem>\n    implements OnInit, OnDestroy {\n\n    /**\n     * log context. Override this property in descending classes.\n     *\n     * NOTE:\n     *   I use very short variable names ONLY when they are all over\n     *   the place. This is used all throughout the codebase.\n     *   Otherwise, I usually use very long names...often too long! :-)\n     */\n    protected lc: string = `[${IbgibComponentBase.name}]`;\n\n    private _updatingIbGib: boolean;\n    // private _addr: IbGibAddr;\n    @Input()\n    get addr(): IbGibAddr { return this.item?.addr; }\n    set addr(value: IbGibAddr) {\n        const lc = `${this.lc}[set addr(${value})]`;\n        if (this._updatingIbGib) { \n            console.log(`${lc} already updatingIbGib`)\n            return; \n        }\n        console.log(`${lc} updating ibgib ${value}`);\n        this._updatingIbGib = true;\n        this.updateIbGib(value).finally(() => {\n            this._updatingIbGib = false;\n        });\n    }\n    @Input()\n    item: TItem;\n    @Input()\n    get ib(): Ib { return this.item?.ib; }\n    @Input()\n    get gib(): Gib { return this.item?.gib; }\n    @Input()\n    get ibGib(): IbGib_V1 { return this.item?.ibGib; }\n    @Input()\n    get isMeta(): boolean {\n        return this.item?.isMeta || DEFAULT_META_IB_STARTS.some(x => this.ib?.startsWith(x)); // hack\n    }\n\n    get files(): FilesService { return this.common.files; }\n\n    @Input()\n    get isTag(): boolean { return this.ib?.startsWith('tag') || false; }\n    @Input()\n    get isPic(): boolean { return this.ib?.startsWith('pic') || false; }\n    @Input()\n    get isComment(): boolean { return this.ib?.startsWith('comment') || false; }\n\n    /**\n     * Hack because ngSwitchCase doesn't seem to work properly. Probably my fault...hmmm\n     *\n     * this is used in the fallback case.\n     */\n    get itemTypes(): string[] { return ['pic','comment','tag']; }\n\n    constructor(\n        protected common: CommonService,\n        protected ref: ChangeDetectorRef,\n    ) {\n\n    }\n\n    ngOnInit() {}\n\n    ngOnDestroy() {}\n\n    get title(): string {\n        if (this.ib?.startsWith('tag ')) {\n            return this.ib.split(' ').slice(1).join(' ');\n        } else if (this.ib?.startsWith('pic ')) {\n            return this.ib.split(' ').slice(1).join(' ');\n        } else {\n            return this.ib || 'loading...';\n        }\n    }\n\n    clearItem(): void {\n        const lc = `${this.lc}[${this.clearItem.name}]`;\n        console.log(`${lc} clearing data...`);\n        // delete this._addr;\n        delete this.item;\n        // delete this.ib;\n        // delete this.gib;\n        // delete this.ibGib;\n        // delete this.isMeta;\n        console.log(`${lc} data cleared.`);\n    }\n\n    async updateIbGib(addr: IbGibAddr): Promise<void> {\n        const lc = `${this.lc}[${this.updateIbGib.name}(${addr})]`;\n        if (addr === this.addr) { return; }\n\n        this.clearItem();\n\n        if (addr) {\n            console.log(`${lc} setting new address`)\n            // we have an addr which is different than our previous.\n            const{ ib, gib } = getIbAndGib({ibGibAddr: addr});\n            this.item = <any>{\n                addr,\n                ib,\n                gib,\n            };\n\n            if (this.gib === GIB && !this.isMeta) {\n                this.item.isMeta = true;\n            }\n        } else {\n            console.log(`${lc} no new address`)\n        }\n    }\n\n    /**\n     * Loads the ibGib's full record, using the files service.\n     *\n     * This is not required for all components!\n     *\n     * @param force reload the ibGib even if the addr matches the current this.ibGib\n     */\n    async loadIbGib({\n        item,\n        force,\n    }: {\n        item: TItem,\n        force?: boolean,\n    } = {\n        item: this.item,\n    }): Promise<void> {\n        const lc = `${this.lc}[${this.loadIbGib.name}]`;\n        if (!item) {\n            const isMeta = this.isMeta;\n            item = this.item;\n            item.isMeta = isMeta;\n        }\n        if (item.addr) {\n            const {ib, gib} = getIbAndGib({ibGibAddr: item.addr});\n            if (!force && item.ibGib && getIbGibAddr({ibGib: item.ibGib}) === item.addr) {\n                // do nothing, because we already have loaded this address.\n            } else {\n                if (gib === GIB) {\n                    // primitive, just build\n                    item.ibGib = Factory_V1.primitive({ib});\n                } else {\n                    // try to get from files provider\n                    const resGet = await this.files.get({addr: item.addr, isMeta: item.isMeta });\n                    if (resGet.success) {\n                        item.ibGib = resGet.ibGib;\n                    } else if (!resGet.success && item.isMeta) {\n                        // we've tried to load a meta ibGib that does not exist.\n                        item.ibGib = Factory_V1.primitive({ib});\n                    } else {\n                        console.error(`${lc} ${resGet.errorMsg || 'unknown error'}`)\n                    }\n                }\n            }\n        } else {\n            item.ibGib = null;\n        }\n    }\n\n    /**\n     * Creates a primitive ibGib, forks it with the same ib\n     * but with a tpj (temporal junction point, aka birthday) to give it\n     * uniqueness and returns the fork result, which includes the unique ibGib.\n     *\n     * Also this will by default use linkedRel8ns for 'past' and 'ancestor'.\n     *\n     * Perhaps this should be somewhere in the core lib, perhaps in the factory.\n     *\n     * @param ib primitive ib\n     */\n    async reifyPrimitive({\n        ib,\n        dna\n    }: {\n        /**\n         * Primitive ib, e.g., \"tags\"\n         */\n        ib: Ib,\n        /**\n         * usually will be false. Can't think of why true atm. just passing through to fork call.\n         */\n        dna?: boolean\n    }): Promise<TransformResult<IbGib_V1>> {\n        const primitive = Factory_V1.primitive({ib});\n        const result =\n            await V1.fork({\n                src: primitive,\n                dna,\n                linkedRel8ns: [Rel8n.past, Rel8n.ancestor],\n                tpj: {uuid: true, timestamp: true},\n            });\n        return result;\n    }\n\n    async navTo({addr}: {addr: IbGibAddr}): Promise<void> {\n        console.log(`navigating to addr: ${addr}`);\n        await this.common.nav.navTo({addr});\n        // await this.common.nav.navigateRoot(['ibgib', addr], {\n        //     queryParamsHandling: 'preserve',\n        //     animated: true,\n        //     animationDirection: 'forward',\n        // });\n    }\n\n    /**\n     * Load the item's other properties, e.g. text or tagText.\n     *\n     * Does nothing in base implementation.\n     */\n    async loadItem(item?: TItem): Promise<void> {\n        item = item || this.item;\n        if (!item) { return; }\n\n        await this.loadType(item);\n        if (item.type === 'pic') { await this.loadPic(item); }\n        if (item.type === 'comment') { await this.loadComment(item); }\n    }\n\n    async loadType(item?: TItem): Promise<void> {\n        item = item || this.item;\n        if (this.isTag) {\n            this.item.type = 'tag';\n        } else if (this.isPic) {\n            this.item.type = 'pic';\n        } else if (this.isComment) {\n            this.item.type = 'comment';\n        }\n    }\n\n  async loadPic(item?: TItem): Promise<void> {\n    const lc = `${this.lc}[${this.loadPic.name}]`;\n    if (!this.isPic) { return; }\n    if (!this.ibGib?.data?.binHash) { return; }\n    if (!this.ibGib?.data?.ext) { return; }\n\n    const data = <PicData>this.ibGib.data;\n    const resGet =\n      await this.common.files.get({binHash: data.binHash, binExt: data.ext})\n    this.item.timestamp = data.timestamp;\n    // this.item.picSrc = await this.common.files.getFileSrc({binHash: data.binHash, binExt: data.ext});\n    console.log(`${lc} src: ${this.item.picSrc}`);\n    if (resGet.success && resGet.binData) {\n      this.item.picSrc = `data:image/jpeg;base64,${resGet.binData}`;\n      setTimeout(() => {\n        this.ref.detectChanges();\n      }, 2000);\n    } else {\n      console.error(`${lc} Couldn't get pic. ${resGet.errorMsg}`);\n    }\n  }\n\n  async loadComment(item?: TItem): Promise<void> {\n    const lc = `${this.lc}[${this.loadComment.name}]`;\n    if (!this.isComment) { return; }\n    if (!this.ibGib?.data?.text) { return; }\n\n    const data = <CommentData>this.ibGib.data;\n    this.item.text = data.text;\n    this.item.timestamp = data.textTimestamp || data.timestamp;\n  }\n\n}\n","import { FilesystemDirectory, FilesystemEncoding } from '@capacitor/core';\nimport { GIB } from 'ts-gib/dist/V1';\nimport { Ib } from 'ts-gib';\n\nexport const IBGIB_BASE_DIR = FilesystemDirectory.Documents;\nexport const IBGIB_FILES_ENCODING = FilesystemEncoding.UTF8;\n\nexport const IBGIB_BASE_SUBPATH = 'ibgib';\nexport const IBGIB_IBGIBS_SUBPATH = 'ibgibs';\n\n/**\n * contains special ibgibs\n *\n * Use case:\n *   Because some special ibgibs will be changed frequently,\n *   e.g. settings, a separate folder will be useful.\n */\nexport const IBGIB_META_SUBPATH = 'meta';\n/**\n * Path for storing binaries (e.g. pics).\n *\n * bins will be stored in the format:\n *   [hash].ext\n *\n * @example\n *   ABC123.jpg\n */\nexport const IBGIB_BIN_SUBPATH = 'bin';\nexport const IBGIB_DNA_SUBPATH = 'dna';\n\nexport const TAGS_IB = 'tags';\nexport const TAGS_IBGIB_ADDR = `${TAGS_IB}^${GIB}`;\nexport const TAGS_IBGIB_ADDR_KEY = `key ${TAGS_IBGIB_ADDR}`;\n\n/**\n * The main tags^gib ibgib uses this rel8n name to keep track of tags.\n */\nexport const TAG_REL8N_NAME = 'tag';\n/**\n * A tag ibGib uses this rel8n name for the ibgibs that it targets.\n */\nexport const TAGGED_REL8N_NAME = 'tagged';\n\n/**\n * These rel8n names are shown in a list view by default.\n */\nexport const DEFAULT_LIST_REL8N_NAMES: string[] = [\n    'pic', 'comment', 'link', 'tag', 'result'\n]\n\nexport const DEFAULT_META_IB_STARTS: Ib[] = [\n    'tags', 'tag ', 'settings', 'setting ',\n]\n\nexport const SPECIAL_URLS = [\n    'tags', 'home'\n];","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nconst TARGET_QUERY_PARAM_NAME = 'target';\nconst TARGETS = [\n  'sidebar',\n  'browser-action',\n];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PageSelectorGuard implements CanActivate {\n  constructor(\n    private router: Router,\n  ) {\n\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const target = next.queryParams[TARGET_QUERY_PARAM_NAME];\n\n    if (target) {\n      if (TARGETS.includes(target)) {\n        // redirect to a valid target\n        return this.router.navigate(\n            ['/' + target],\n            {\n              queryParams: { [TARGET_QUERY_PARAM_NAME]: null, },\n              queryParamsHandling: \"merge\"\n            }\n          ).then(() => { return false; });\n      } else {\n        // todo: need to redirect to invalid url\n        return false;\n      }\n    } else {\n      // no target query param so this guard doesn't apply\n      return true;\n    }\n  }\n  \n}\n","import { Injectable, Inject } from '@angular/core';\nimport { FilesService } from './files.service';\n// import { NavController } from '@ionic/angular';\nimport { IbgibsService } from './ibgibs.service';\nimport { IbGibAddr } from 'ts-gib';\n\nexport interface IbgibNav {\n  navTo({addr}: {addr: IbGibAddr}): Promise<void>;\n}\n\n/**\n * Contains common singleton services that will be included in the\n * IbgibComponentBase class.\n *\n * Refactoring and adding services in base classes is inefficient\n * without this kind of shared service provider, because to add/remove a service\n * you have to add/remove it also in every single descending class.\n * This gets _extremely_ unwieldy as the architecture grows.\n *\n * Some things do not go here that is specific to the descendant class,\n * e.g., ChangeDetectorRef.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonService {\n\n  constructor(\n    public ibgibs: IbgibsService,\n    public files: FilesService,\n    @Inject('IbgibNav') public nav: IbgibNav,\n  ) {\n\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Plugins, FilesystemDirectory, FilesystemEncoding, Capacitor, FileReadResult } from '@capacitor/core';\nconst { Filesystem } = Plugins;\n\nimport { IbGibAddr } from 'ts-gib/dist';\nimport { IbGib_V1 } from 'ts-gib/dist/V1';\nimport { getIbGibAddr, hash, getIbAndGib } from 'ts-gib/dist/helper';\nimport { IBGIB_BASE_SUBPATH, IBGIB_BIN_SUBPATH, IBGIB_META_SUBPATH, IBGIB_DNA_SUBPATH, IBGIB_IBGIBS_SUBPATH, IBGIB_FILES_ENCODING, IBGIB_BASE_DIR } from '../common/constants';\nimport { DomSanitizer } from '@angular/platform-browser';\n\ninterface FileResult {\n  success?: boolean;\n  /**\n   * If truthy, will return the raw Filesystem call's result.\n   */\n  raw?: any;\n  /**\n   * If errored, this will contain the errorMsg.\n   */\n  errorMsg?: string;\n}\n\n/**\n * Options for retrieving data from the file system.\n */\ninterface GetIbGibOpts {\n  /**\n   * If getting ibGib object, this is its address.\n   */\n  addr?: IbGibAddr;\n  /**\n   * If getting binary, this is the hash we're looking for (binId)\n   */\n  binHash?: string;\n  /**\n   * If getting binary, this is the extension.\n   */\n  binExt?: string;\n  /**\n   * If truthy, will look in the meta subpath first, then the regular if not found.\n   */\n  isMeta?: boolean;\n  /**\n   * Are we looking for a DNA ibgib?\n   */\n  isDna?: boolean;\n  /**\n   * If truthy, will get the underlying raw read result.\n   *\n   * ATOW, in Ionic/Capacitor's case, this would hold the `readFile` result obj.\n   */\n  getRawResult?: boolean;\n}\n/**\n * Result for retrieving an ibGib from the file system.\n */\ninterface GetIbGibResult extends FileResult {\n  /**\n   * ibGib if retrieving a \"regular\" ibGib.\n   *\n   * This is used when you're not getting a pic, e.g.\n   */\n  ibGib?: IbGib_V1;\n  /**\n   * This is used when you're getting a pic's binary content.\n   */\n  binData?: any;\n}\n\ninterface PutIbGibOpts {\n  ibGib?: IbGib_V1;\n  /**\n   * if true, will store this data in the bin folder with its hash.\n   */\n  binData?: string;\n  /**\n   * If true, will store in a different folder.\n   */\n  isDna?: boolean;\n  /**\n   * extension to store the bindata with.\n   */\n  binExt?: string;\n  /**\n   * If true, will store with metas.\n   */\n  isMeta?: boolean;\n  /**\n   * If truthy, will get the underlying raw read/write result.\n   *\n   * ATOW, in Ionic/Capacitor's case, this would hold the `writeFile` result obj.\n   */\n  getRawResult?: boolean;\n}\ninterface PutIbGibResult extends FileResult {\n  binHash?: string;\n}\n\ninterface DeleteIbGibOpts extends GetIbGibOpts { }\ninterface DeleteIbGibResult extends FileResult { }\n\n/**\n * Works with file system/storage to save/load ibgibs.\n *\n * Relies on Capacitor's FileSystem plugin.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilesService {\n  protected lc: string = `[${FilesService.name}]`;\n\n  constructor(\n    private http: HttpClient,\n    private sanitizer: DomSanitizer,\n  ) {\n    console.log('Hello FilesService Service');\n  }\n\n  private buildPath({\n    filename,\n    isMeta,\n    isDna,\n    isBin\n  }: {\n    filename: string,\n    isMeta?: boolean,\n    isDna: boolean,\n    isBin?: boolean\n  }): string {\n    if (isMeta){\n      return `${IBGIB_BASE_SUBPATH}/${IBGIB_META_SUBPATH}/${filename}`;\n    } else if (isBin) {\n      return `${IBGIB_BASE_SUBPATH}/${IBGIB_BIN_SUBPATH}/${filename}`;\n    } else if (isDna) {\n      return `${IBGIB_BASE_SUBPATH}/${IBGIB_DNA_SUBPATH}/${filename}`;\n    } else {\n      // regular ibGib\n      return `${IBGIB_BASE_SUBPATH}/${IBGIB_IBGIBS_SUBPATH}/${filename}`;\n    }\n  }\n\n  getFilename({\n    addr,\n    binHash,\n    binExt\n  }: {\n    addr?: string,\n    binHash?: string,\n    binExt?: string,\n  }): string {\n    if (addr) {\n      return `${addr}.json`;\n    } else {\n      return binExt ? binHash + '.' + binExt : binHash;\n    }\n  }\n\n  async get({\n    addr,\n    binHash,\n    binExt,\n    isMeta,\n    isDna,\n    getRawResult,\n  }: GetIbGibOpts): Promise<GetIbGibResult> {\n    const lc = `${this.lc}[${this.get.name}(${addr})]`;\n\n    if (!addr && !binHash) { throw new Error(`${lc} addr or binHash required.`) };\n\n    const {ib,gib} = getIbAndGib({ibGibAddr: addr});\n    const isBin = !addr;\n    const result: GetIbGibResult = {};\n\n    const tryRead: (p:string) => Promise<FileReadResult> = async (p) => {\n      const lcTry = `${lc}[${tryRead.name}]`;\n      try {\n        const resRead = await Filesystem.readFile({\n          path: p,\n          directory: IBGIB_BASE_DIR,\n          encoding: IBGIB_FILES_ENCODING,\n        });\n        console.log(`${lc} path found: ${p}`);\n        return resRead;\n      } catch (error) {\n        console.log(`${lc} path not found: ${p}`);\n        return null;\n      }\n    }\n    try {\n      let path: string = \"\";\n      let filename: string = \"\";\n      let paths: string[] = [];\n      if (addr) {\n        filename = this.getFilename({addr});\n\n        if (isMeta) {\n          // explicitly stating meta, so only look in meta\n          paths = [ this.buildPath({filename, isMeta: true, isDna: false}), ];\n        } else if (isDna) {\n          // explicitly stating dna, so only look in dna\n          paths = [ this.buildPath({filename, isMeta: false, isDna: true}), ];\n        } else {\n          // could be regular, meta or dna, so we'll search everywhere, but first regular.\n          paths = [\n            this.buildPath({filename, isMeta: false, isDna: false}),\n            this.buildPath({filename, isMeta: true, isDna: false}),\n            this.buildPath({filename, isMeta: false, isDna: true}),\n          ];\n        }\n      } else {\n        filename = binExt ? binHash + '.' + binExt : binHash;\n        path = this.buildPath({filename, isDna: false, isMeta: false, isBin: true})\n        paths = [path];\n      }\n      let resRead: any = null;\n      for (const tryPath of paths) {\n        let x = await tryRead(tryPath);\n        if (x?.data) { resRead = x; break; }\n      }\n      if (!resRead) { throw new Error(`paths not found: ${JSON.stringify(paths)}`) }\n      if (!isBin) {\n        // ibGib retrieved\n        result.ibGib = <IbGib_V1>JSON.parse(resRead.data);\n      } else {\n        // bin\n        result.binData = resRead.data;\n      }\n      if (getRawResult) { result.raw = resRead; }\n      result.success = true;\n    } catch (error) {\n      const errorMsg = `${lc} ${error.message}`;\n      console.error(errorMsg);\n      result.errorMsg = errorMsg;\n    }\n\n    return result;\n  }\n\n  // async getFileSrc({binHash, binExt}: {binHash: string, binExt: string}): Promise<any> {\n  //   const lc = `${this.lc}[${this.getFileSrc.name}(${binHash})]`;\n  //   let filename = binExt ?\n  //     binHash + '.' + binExt :\n  //     binHash;\n  //   let path = this.buildPath({filename, isDna: false, isMeta: false, isBin: true});\n  //   console.log(`${lc} path: ${path}`);\n  //   let resGet = await Filesystem.getUri({path, directory: IBGIB_BASE_DIR});\n  //   console.log(`${lc} original uri: ${resGet.uri}`);\n  //   let uri = Capacitor.convertFileSrc(resGet.uri);\n  //   console.log(`${lc} final uri: ${uri}`);\n  //   let sanitized = this.sanitizer.bypassSecurityTrustUrl(uri);\n  //   return uri;\n  //   // return Capacitor.convertFileSrc(IBGIB_BASE_DIR + '/' + path);\n  // }\n\n  async put({\n    ibGib,\n    binData,\n    binExt,\n    isMeta,\n    isDna,\n    getRawResult,\n  }: PutIbGibOpts): Promise<PutIbGibResult> {\n    const lc = `${this.lc}[${this.put.name}]`;\n\n    if (!ibGib && !binData) { throw new Error(`${lc} ibGib or binData required.`) };\n\n    let result: PutIbGibResult = {};\n\n    try {\n      await this.ensureDirs();\n      let path: string = \"\";\n      let filename: string = \"\";\n      let data: string = \"\";\n      if (ibGib) {\n        const addr = getIbGibAddr({ibGib});\n        filename = `${addr}.json`;\n        path = this.buildPath({filename, isMeta, isDna});\n        data = JSON.stringify(ibGib);\n      } else {\n        const binHash = await hash({s: binData});\n        filename = binExt ? binHash + '.' + binExt : binHash;\n        path = this.buildPath({filename, isDna: false, isMeta: false, isBin: true})\n        data = binData;\n        result.binHash = binHash;\n      }\n\n      const resWrite = await Filesystem.writeFile({\n        path,\n        data,\n        directory: IBGIB_BASE_DIR,\n        encoding: FilesystemEncoding.UTF8\n      });\n      console.log(`${lc} resWrite.uri: ${resWrite.uri}`);\n\n      result.success = true;\n      if (getRawResult) { result.raw = resWrite; }\n    } catch (error) {\n      const errorMsg = `${lc} ${error.message}`;\n      console.error(errorMsg);\n      result.errorMsg = errorMsg;\n    }\n\n    return result;\n  }\n\n  /**\n   * Ensure directories are created on filesystem.\n   */\n  async ensureDirs(): Promise<void> {\n    const directory = IBGIB_BASE_DIR;\n    const ensure: (path: string) => Promise<void> = async (path) => {\n      const lc = `ensure(path: ${path})`;\n      let exists = false;\n      try {\n        const result = await Filesystem.readdir({ path, directory });\n        console.log(`${lc} result.files: ${JSON.stringify(result?.files)}`);\n        exists = true;\n      } catch (error) {\n        console.log(`${lc} Did not exist`);\n      }\n\n      if (!exists) {\n        console.log(`${lc} creating...`);\n        try {\n          const result = await Filesystem.mkdir({ path, directory });\n        } catch (error) {\n          console.log(`${lc} Error creating.`)\n        } finally {\n          console.log(`${lc} complete.`);\n        }\n      }\n    }\n\n    const paths = [\n      IBGIB_BASE_SUBPATH,// = 'ibgib';\n      IBGIB_BASE_SUBPATH + '/' + IBGIB_IBGIBS_SUBPATH,\n      IBGIB_BASE_SUBPATH + '/' + IBGIB_META_SUBPATH,\n      IBGIB_BASE_SUBPATH + '/' + IBGIB_BIN_SUBPATH,\n      IBGIB_BASE_SUBPATH + '/' + IBGIB_DNA_SUBPATH,\n    ];\n    for (let path of paths) {\n      await ensure(path);\n    }\n  }\n\n  async delete({\n    addr,\n    binHash,\n    binExt,\n    isMeta,\n    isDna,\n    getRawResult: getRaw\n  }: GetIbGibOpts): Promise<GetIbGibResult> {\n    const lc = `${this.lc}[${this.get.name}]`;\n\n    if (!addr && !binHash) { throw new Error(`${lc} addr or binHash required.`) };\n\n    const isBin = !addr;\n    const result: GetIbGibResult = {};\n\n    try {\n      let path: string = \"\";\n      let filename: string = \"\";\n      if (addr) {\n        filename = this.getFilename({addr});\n        path = this.buildPath({filename, isMeta, isDna});\n      } else {\n        filename = binExt ? binHash + '.' + binExt : binHash;\n        path = this.buildPath({filename, isMeta: false, isDna: false, isBin: true})\n      }\n      console.log(`${lc} path: ${path}, directory: ${IBGIB_BASE_DIR}`)\n      const resDelete = await Filesystem.deleteFile({\n        path,\n        directory: IBGIB_BASE_DIR,\n      });\n      console.log(`${lc} deleted`);\n      if (getRaw) { result.raw = resDelete; }\n      result.success = true;\n    } catch (error) {\n      const errorMsg = `${lc} ${error.message}`;\n      console.error(errorMsg);\n      result.errorMsg = errorMsg;\n    }\n\n    return result;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IbGib_V1, Rel8n } from 'ts-gib/dist/V1';\nimport { IbGibAddr, V1, TransformResult } from 'ts-gib';\nimport { Storage } from '@capacitor/core';\nimport { FilesService } from './files.service';\nimport { TAGS_IBGIB_ADDR_KEY, TAGS_IB, TAG_REL8N_NAME } from '../common/constants';\nimport { Factory_V1 as factory } from 'ts-gib/dist/V1';\nimport { getIbGibAddr } from 'ts-gib/dist/helper';\nimport { TagData } from '../common/types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IbgibsService {\n  private lc = `[${IbgibsService.name}]`;\n\n  private _initializing: boolean;\n\n  constructor(\n    private files: FilesService,\n  ) { }\n\n\n\n  /**\n   * Gets the apps TagsIbGib.\n   *\n   * Initializes if asked to, which will create a new TagsIbGib as well\n   * as create some initial tags as well.\n   *\n   * @param initialize initialize (i.e. create) if TagsIbGib not found. Used for initializing app (first run).\n   */\n  async getTagsIbgib({\n    initialize\n  }: {\n    initialize: boolean\n  }): Promise<IbGib_V1 | null> {\n    const lc = `${this.lc}[${this.getTagsIbgib.name}]`;\n    try {\n      let tagsAddr = (await Storage.get({key: TAGS_IBGIB_ADDR_KEY}))?.value;\n      if (!tagsAddr) {\n        if (initialize && !this._initializing) {\n          this._initializing = true;\n          try {\n            tagsAddr = await this.initializeTags();\n          } catch (error) {\n            console.error(`${lc} error initializing: ${error.message}`);\n          } finally {\n            this._initializing = false;\n          }\n        } else {\n          return null;\n        }\n      }\n      console.log(`tagsAddr: ${tagsAddr}`);\n\n      let resTags = await this.files.get({addr: tagsAddr, isMeta: true});\n      if (!resTags.success) { throw new Error(resTags.errorMsg); }\n      if (!resTags.ibGib) { throw new Error(`no ibGib in result`); }\n\n      return resTags.ibGib\n    } catch (error) {\n      console.error(`${lc} ${error.message}`);\n      return null;\n    }\n  }\n\n  /**\n   * Creates a new tags^gib instance (uniquely reified), as well as default initial\n   * tags, e.g. \"home\", \"favorites\", etc., and relates these individual tags to\n   * the tags ibGib itself.\n   *\n   * Stores the tags ibGib's addr in storage.\n   */\n  async initializeTags(): Promise<IbGibAddr | null> {\n    const lc = `${this.lc}[${this.initializeTags.name}]`;\n    try {\n      const tagsIbGib = await this.initializeNewTagsIbGib();\n      let tagsAddr = getIbGibAddr({ibGib: tagsIbGib});\n      await Storage.set({key: TAGS_IBGIB_ADDR_KEY, value: tagsAddr});\n\n      // at this point, our tags ibGib has no associated tag ibGibs.\n      // add home, favorite tags\n      const initialTagDatas: TagData[] = [\n        { tagText: 'home', icon: 'home-outline' },\n        { tagText: 'favorite', icon: 'heart-outline' },\n      ];\n      for (let tagData of initialTagDatas) {\n        const resCreate = await this.createTagIbGib(tagData);\n        tagsAddr = resCreate.newTagsAddr;\n        await Storage.set({key: TAGS_IBGIB_ADDR_KEY, value: tagsAddr});\n      }\n\n      return tagsAddr;\n    } catch (error) {\n      console.error(`${lc} ${error.message}`);\n      return null;\n    }\n  }\n\n  private async initializeNewTagsIbGib(): Promise<IbGib_V1> {\n    const lc = `${this.lc}[${this.initializeNewTagsIbGib.name}]`;\n    try {\n      const src = factory.primitive({ib: TAGS_IB });\n      const resNewTags = await V1.fork({\n        src,\n        destIb: TAGS_IB,\n        linkedRel8ns: [Rel8n.past, Rel8n.ancestor],\n        tpj: { uuid: true },\n        dna: true,\n      });\n      await this.persistTransformResult({\n        resTransform: resNewTags,\n        isMeta: true\n      });\n      // for (let ibGib of [newTagsIbGib, ...(intermediateIbGibs || [])]) {\n      //   let resPut = await this.files.put({ibGib, isMeta: true});\n      //   if (!resPut.success) { throw new Error(resPut.errorMsg || 'error creating new tags ibGib'); }\n      // }\n      // for (let ibGib of dnas) {\n      //   let resPut = await this.files.put({ibGib, isDna: true});\n      //   if (!resPut.success) { throw new Error(resPut.errorMsg || 'error creating new tags ibGib'); }\n      // }\n      // return newTagsIbGib;\n      return resNewTags.newIbGib;\n    } catch (error) {\n      console.error(`${lc} ${error.message}`);\n      throw error;\n    }\n  }\n\n  /**\n   * Tags for this app have the form: tag [tagText]\n   *\n   * @param tagText e.g. \"Favorites\"\n   *\n   * @example\n   * For the Favorites tag, the ib would be \"tag Favorites\"\n   */\n  tagTextToIb(tagText: string): string {\n    const lc = `${this.lc}[${this.tagTextToIb.name}]`;\n    if (!tagText) { throw new Error(`${lc} tag required.`)}\n    return `tag ${tagText}`;\n  }\n\n  async createTagIbGib({\n    tagText,\n    icon,\n  }: {\n    tagText: string,\n    icon?: string,\n  }): Promise<{newTagIbGib: IbGib_V1, newTagsAddr: string}> {\n    const lc = `${this.lc}[${this.createTagIbGib.name}]`;\n    try {\n      if (!tagText) { throw new Error(`${lc} tag text required`); }\n      const tagIb = this.tagTextToIb(tagText);\n      const tagPrimitive = factory.primitive({ib: \"tag\"});\n      const resNewTag = await factory.firstGen({\n        parentIbGib: tagPrimitive,\n        ib: tagIb,\n        data: <TagData>{ tagText, icon: icon || '' },\n        linkedRel8ns: [ Rel8n.past, Rel8n.ancestor ],\n        dna: true,\n      });\n      const { newIbGib: newTagIbGib } = resNewTag;\n      await this.persistTransformResult({resTransform: resNewTag, isMeta: true});\n      const newTagsAddr = await this.rel8TagToTagsIbGib(newTagIbGib);\n      return { newTagIbGib, newTagsAddr };\n    } catch (error) {\n      console.log(`${lc} ${error.message}`);\n      throw error;\n    }\n  }\n\n  /**\n   * Convenience function for persisting a transform result, which has\n   * a newIbGib and optionally intermediate ibGibs and/or dnas.\n   */\n  async persistTransformResult({\n    isMeta,\n    resTransform,\n  }: {\n    isMeta?: boolean,\n    resTransform: TransformResult<IbGib_V1>\n  }): Promise<void> {\n    const lc = `${this.lc}[${this.persistTransformResult.name}]`;\n    try {\n      const { newIbGib, intermediateIbGibs, dnas } = resTransform;\n      const ibGibs = [newIbGib, ...(intermediateIbGibs || [])];\n      for (let ibGib of ibGibs) {\n        const resPut = await this.files.put({ibGib, isMeta});\n        if (!resPut.success) { throw new Error(`${lc} ${resPut.errorMsg}`); }\n      }\n      if (dnas) {\n        for (let ibGib of dnas) {\n          const resPut = await this.files.put({ibGib, isDna: true});\n          if (!resPut.success) { throw new Error(`${lc} ${resPut.errorMsg}`); }\n        }\n      }\n    } catch (error) {\n      console.log(`${lc} ${error.message}`);\n      throw error;\n    }\n  }\n\n  /**\n   * Relates the given tag to the TagsIbGib, saves the generated\n   * TagsIbGib and updates the settings to point to the new TagsIbGib.\n   *\n   * @param newTagIbGib to add to Tags\n   */\n  async rel8TagToTagsIbGib(newTagIbGib: IbGib_V1): Promise<IbGibAddr> {\n    const lc = `${this.lc}[${this.rel8TagToTagsIbGib.name}]`;\n    try {\n      const newTagAddr = getIbGibAddr({ibGib: newTagIbGib});\n\n      // get the tags ibgib with rel8ns to all (local) tags\n      let tagsAddr = (await Storage.get({key: TAGS_IBGIB_ADDR_KEY}))?.value;\n      if (!tagsAddr) { throw new Error(`tagsAddr not found`) };\n      let resGetTags = await this.files.get({addr: tagsAddr, isMeta: true});\n      if (!resGetTags.success) { throw new Error(`couldn't get tags`) }\n      if (!resGetTags.ibGib) { throw new Error(`resGetTags.ibGib falsy`) }\n\n      // rel8 the new tag to the tags index.\n      const resTransform = await V1.rel8({\n        src: resGetTags.ibGib!,\n        rel8nsToAddByAddr: { [TAG_REL8N_NAME]: [newTagAddr] },\n        dna: true,\n        linkedRel8ns: [Rel8n.past],\n      });\n\n      // persist\n      await this.persistTransformResult({resTransform, isMeta: true});\n\n      // return the new tagS address (not the incoming new tag)\n      const { newIbGib: newTagsIbGib } = resTransform;\n      tagsAddr = getIbGibAddr({ibGib: newTagsIbGib});\n\n      return tagsAddr;\n    } catch (error) {\n      console.error(`${lc} ${error.message}`);\n      throw error;\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { IbgibNav } from './common.service';\n\n@Injectable()\nexport class NgIbgibNavService implements IbgibNav {\n\n  protected lc: string = `[${NgIbgibNavService.name}]`;\n\n  constructor(\n    private router: Router,\n  ) { }\n\n  async navTo({ addr }: { addr: string; }): Promise<void> {\n    const lc: string = `${this.lc}[${this.navTo.name}(${addr || 'undefined|null'})]`;\n    console.log(`${lc} called`);\n    try {\n      await this.router.navigate(['ibgib', addr], {\n          queryParamsHandling: 'preserve',\n      });\n    } catch (error) {\n      console.error(`${lc} ${error.message}`);\n    }\n  }\n\n}\n","import { Component, OnInit, OnDestroy, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { IbgibComponentBase } from '../common/bases/ibgib-component-base';\nimport { IbGibAddr } from 'ts-gib';\nimport { Subscription } from 'rxjs';\nimport { CommonService } from '../services/common.service';\nimport { SPECIAL_URLS } from '../common/constants';\nimport { getIbGibAddr, pretty } from 'ts-gib/dist/helper';\nimport { Plugins } from '@capacitor/core';\nconst { Filesystem } = Plugins;\n\n@Component({\n  selector: 'ibgib-sidebar',\n  templateUrl: './sidebar.page.html',\n  styleUrls: ['./sidebar.page.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SidebarPage \n  extends IbgibComponentBase\n  implements OnInit, OnDestroy {\n\n  protected lc: string = `[${SidebarPage.name}]`;\n\n  private paramMapSub: Subscription;\n\n  constructor(\n    protected common: CommonService,\n    protected ref: ChangeDetectorRef,\n    private activatedRoute: ActivatedRoute,\n  ) {\n    super(common, ref);\n  }\n\n  async ngOnInit() {\n    // this.folder = this.activatedRoute.snapshot.paramMap.get('addr');\n    this.subscribeParamMap();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribeParamMap();\n  }\n\n  async updateIbGib(addr: IbGibAddr): Promise<void> {\n    const lc = `${this.lc}[${this.updateIbGib.name}(${addr})]`;\n    console.log(`${lc} updating...`);\n    try {\n      await super.updateIbGib(addr);\n      await this.loadIbGib();\n      console.log(`${lc} ibGib: ${pretty(this.ibGib)}`);\n      await this.loadItem();\n    } catch (error) {\n      console.error(`${lc} error: ${error.message}`);\n      this.clearItem();\n    } finally {\n      this.ref.detectChanges();\n      console.log(`${lc} updated.`);\n    }\n  }\n\n  subscribeParamMap() {\n    let lc = `${this.lc}[${this.subscribeParamMap.name}]`;\n\n    this.activatedRoute.paramMap.subscribe(async map => {\n      let addr = map.get('addr');\n      lc = `${lc}[${addr}]`;\n      console.log(`${lc} new addr`)\n\n      if (!SPECIAL_URLS.includes((addr || \"\").toLowerCase()) && encodeURI(addr).includes('%5E')) {\n        // normal handling for a normal ibGib is to update the page's ibgib\n        // and load everything.\n        console.log(`new paramMap. addr: ${addr}`);\n        if (addr !== this.addr) {\n          this.updateIbGib(addr);\n        } else {\n          // do nothing, it's the same as the current addr\n        }\n      // } else if (addr === 'something') { // example for future special cases\n      } else {\n        // default special non-ibgib handler, go to the tags ibGib\n        console.log(`${lc} special url entered, navTo to tags ibGib`);\n        const tags = await this.common.ibgibs.getTagsIbgib({initialize: true});\n        addr = getIbGibAddr({ibGib: tags});\n        await this.navTo({addr});\n      }\n    });\n  }\n\n  unsubscribeParamMap() {\n    if (this.paramMapSub) {\n      this.paramMapSub.unsubscribe();\n      delete this.paramMapSub;\n    }\n  }\n\n}\n","<p>sidebar works!</p>\n<p>addr: {{ addr || 'falsy' }}</p>\n<action-bar [addr]='addr'></action-bar>\n<!-- <action-bar></action-bar> -->\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nconsole.log(`main.ts executed.`)\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}
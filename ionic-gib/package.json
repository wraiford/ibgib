{
  "name": "ionicgib",
  "version": "0.2.568",
  "author": "William Raiford",
  "repository": {
    "url": "https://github.com/wraiford/ibgib",
    "type": "git",
    "directory": "ionicgib"
  },
  "funding": {
    "type": "individual",
    "url": "https://paypal.me/ibGib"
  },
  "scripts": {
    "man:start": "echo 'starts a web server for local development at https://localhost:4200'",
    "prestart": "npm --no-git-tag-version version patch",
    "start": "ng serve --ssl --extra-webpack-config webpack.partial.js",
    "poststart": "npm run man:start",
    "prestart:lan": "npm --no-git-tag-version version patch",
    "start:lan": "ng serve --ssl --extra-webpack-config webpack.partial.js --host 0.0.0.0",
    "poststart:lan": "npm run man:start",
    "prestart:android": "npm --no-git-tag-version version patch",
    "start:android": "ionic capacitor run android",
    "prestart:ios": "npm --no-git-tag-version version patch",
    "start:ios": "ionic capacitor run ios",
    "man:build": "echo 'builds project with aot flag and outputs to www folder. use this with extension development in combination with \"npm run ff\".'",
    "prebuild": "npm --no-git-tag-version version patch",
    "build": "ng build --aot --output-path www --extra-webpack-config webpack.partial.js",
    "postbuild": "npm run man:build",
    "man:build:prod": "echo 'builds project with aot flag, configuration production flag, and outputs to www folder.'",
    "prebuild:prod": "npm run prebuild",
    "build:prod": "npm run build:prod:ng",
    "build:prod:ng": "ng build --aot --output-path www --extra-webpack-config webpack.partial.js --configuration production",
    "build:prod:ionic": "ionic build --prod --aot --minifyjs --optimizejs --output-path www --extra-webpack-config webpack.partial.js",
    "build:prod:ionic:full": "ionic build --prod --aot --minifyjs --minifycss --optimizejs --output-path www --extra-webpack-config webpack.partial.js",
    "postbuild:prod": "npm run man:build:prod",
    "prebuild:ff": "npm run hack:v2",
    "build:ff": "npm run build",
    "prebuild:chrome:xxxx": "npm run hack:v3",
    "build:chrome": "npm run build",
    "build:android": "npm run build && ionic build && ionic capacitor sync android",
    "build:ios": "npm run build && ionic build && ionic capacitor sync ios",
    "build:android:prod": "ionic capacitor build android --prod",
    "build:ios:prod": "ionic capacitor build ios --prod",
    "man:watch": "echo 'builds with aot flag, outputting to www with `--watch` flag enabled for live-reloading. Use this with extension development.'",
    "prewatch": "npm --no-git-tag-version version patch",
    "watch": "ng build --aot --output-path www --watch",
    "postwatch": "npm run man:watch",
    "prewatch:android": "npm --no-git-tag-version version patch",
    "watch:android": "ionic capacitor run android --live-reload",
    "prewatch:ios": "npm --no-git-tag-version version patch",
    "watch:ios": "ionic capacitor run ios --live-reload",
    "presync": "npm --no-git-tag-version version patch",
    "sync": "ionic capacitor sync",
    "presync:android": "npm --no-git-tag-version version patch",
    "sync:android": "ionic capacitor sync android",
    "presync:ios": "npm --no-git-tag-version version patch",
    "sync:ios": "ionic capacitor sync ios",
    "man:ff:createprofiles": "echo 'creates test profiles for ff. each profile retains data between sessions. you can delete profiles in ff at url \"about:profiles\"'",
    "ff:createprofiles": "/Applications/Firefox.app/Contents/MacOS/firefox -CreateProfile \"ibgibtest1\" && /Applications/Firefox.app/Contents/MacOS/firefox -CreateProfile \"ibgibtest2\" && /Applications/Firefox.app/Contents/MacOS/firefox -CreateProfile \"ibgibtest3\"",
    "man:ff": "echo 'ff starts firefox with web-ext. the numbers after are the test profiles, for simultaneous users. the \"none\" is no profile, which does not retain data between sessions.'",
    "ff": "npm run ff:0",
    "man:ff:0": "echo 'runs web-ext ff with a temporary, clean session profile, i.e., does not keep data between sessions.'",
    "preff:0:ext": "npm run build:ff",
    "ff:0": "web-ext run -s './www' -t firefox-desktop --browser-console",
    "ff:prodtest": "web-ext run -s './www' -t firefox-desktop --browser-console",
    "ff:noprofile": "npm run ff:0",
    "man:ff:1": "echo 'runs web-ext ff with ibgibtest1 profile. use ff:createprofiles to do create this'",
    "preff:1:ext": "npm run build:ff",
    "ff:1": "web-ext run -s './www' -t firefox-desktop --firefox-profile=ibgibtest1 --keep-profile-changes --browser-console",
    "ff:1:ext": "npm run ff:1",
    "preff:2:ext": "npm run build:ff",
    "ff:2": "web-ext run -s './www' -t firefox-desktop --firefox-profile=ibgibtest2 --keep-profile-changes --browser-console",
    "ff:2:ext": "npm run ff:2",
    "preff:3:ext": "npm run build:ff",
    "ff:3": "web-ext run -s './www' -t firefox-desktop --firefox-profile=ibgibtest3 --keep-profile-changes --browser-console",
    "ff:3:ext": "npm run ff:3",
    "ff:mobile:android": "web-ext run -s './www' -t firefox-android",
    "prechrome:ext": "npm run build:chrome",
    "chrome": "web-ext run -s './www' -t chromium --keep-profile-changes --browser-console",
    "chrome:prodtest": "web-ext run -s './www' -t chromium --keep-profile-changes --browser-console",
    "test": "ng test",
    "lint": "ng lint",
    "e2e": "ng e2e",
    "bump:patch": "npm --no-git-tag-version version patch",
    "bump:minor": "npm version minor",
    "prehack:v2": "echo 'doing hacks for manifest v2/v3 problems between chrome and firefox (religious wars)'",
    "hack:v2": "npm run hack:v2:manifest && npm run hack:v2:background",
    "prehack:v3": "echo 'doing hacks for manifest v2/v3 problems between chrome and firefox (religious wars)'",
    "hack:v3": "npm run hack:v3:manifest && npm run hack:v3:background",
    "prehack:v2:manifest": "echo 'backing up current manifest.json because its actually generated from manifest.v2.json, and then overwriting manifest.json with manifest.v2.json'",
    "hack:v2:manifest": "cp ./src/assets/manifest.json ./src/assets/manifest.BAK.json && cp ./src/assets/manifest.v2.json ./src/assets/manifest.json",
    "prehack:v3:manifest": "echo 'backing up current manifest.json because its actually generated from manifest.v3.json, and then overwriting manifest.json with manifest.v3.json'",
    "hack:v3:manifest": "cp ./src/assets/manifest.json ./src/assets/manifest.BAK.json && cp ./src/assets/manifest.v3.json ./src/assets/manifest.json",
    "prehack:v2:background": "echo 'backing up current background.js because its actually generated from background.v2.js, and then overwriting background.js with background.v2.js'",
    "hack:v2:background": "cp ./src/assets/background.js ./src/assets/background.BAK.js && cp ./src/assets/background.v2.js ./src/assets/background.js",
    "prehack:v3:background": "echo 'backing up current background.js because its actually generated from background.v3.js, and then overwriting background.js with background.v3.js'",
    "hack:v3:background": "cp ./src/assets/background.js ./src/assets/background.BAK.js && cp ./src/assets/background.v3.js ./src/assets/background.js"
  },
  "private": true,
  "dependencies": {
    "@angular-devkit/architect": "^0.1303.7",
    "@angular-devkit/core": "^13.3.4",
    "@angular-devkit/schematics": "^13.3.4",
    "@angular/common": "^13.3.5",
    "@angular/core": "^13.3.5",
    "@angular/forms": "^13.3.5",
    "@angular/platform-browser": "^13.3.5",
    "@angular/platform-browser-dynamic": "^13.3.5",
    "@angular/router": "^13.3.5",
    "@angular/service-worker": "^13.3.4",
    "@aws-sdk/client-dynamodb": "^3.94.0",
    "@aws-sdk/client-s3": "^3.49.0",
    "@capacitor/android": "^2.2.1",
    "@capacitor/core": "2.2.1",
    "@capacitor/ios": "^2.2.1",
    "@ionic-native/core": "^5.0.7",
    "@ionic-native/splash-screen": "^5.0.0",
    "@ionic-native/status-bar": "^5.0.0",
    "@ionic/angular": "^6.0.1",
    "@ionic/angular-server": "^6.1.7",
    "@ionic/pwa-elements": "^1.5.2",
    "@schematics/angular": "^13.3.0",
    "encrypt-gib": "0.1.2",
    "ngx-build-plus": "^13.0.1",
    "rxjs": "~6.5.1",
    "swiper": "^8.2.4",
    "ts-gib": "^0.3.15",
    "tslib": "^2.0.0",
    "zone.js": "~0.11.4"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "~13.3.4",
    "@angular/cli": "^13.3.4",
    "@angular/compiler": "^13.3.5",
    "@angular/compiler-cli": "^13.3.5",
    "@angular/language-service": "^13.3.5",
    "@capacitor/cli": "2.2.1",
    "@ionic/angular-toolkit": "^6.1.0",
    "@types/jasmine": "~3.5.0",
    "@types/jasminewd2": "~2.0.3",
    "@types/node": "^16.11.11",
    "codelyzer": "^5.1.2",
    "jasmine-core": "~3.5.0",
    "jasmine-spec-reporter": "~5.0.0",
    "karma": "~6.3.9",
    "karma-chrome-launcher": "~3.1.0",
    "karma-coverage-istanbul-reporter": "~3.0.2",
    "karma-jasmine": "~4.0.0",
    "karma-jasmine-html-reporter": "^1.5.0",
    "protractor": "~7.0.0",
    "ts-node": "~8.3.0",
    "tslint": "~6.1.0",
    "typescript": "4.4"
  },
  "description": "App frontend for the ibgib DLT protocol."
}

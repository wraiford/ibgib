{
  "name": "ionicgib",
  "version": "0.1.59",
  "author": "William Raiford",
  "repository": {
    "url": "https://github.com/wraiford/ibgib",
    "type": "git",
    "directory": "ionicgib"
  },
  "funding": {
    "type": "individual",
    "url": "https://paypal.me/ibGib"
  },
  "scripts": {
    "man:start": "echo 'starts a web server for local development at https://localhost:4200'",
    "prestart": "npm version patch",
    "start": "ng serve --ssl",
    "poststart": "npm run man:start",
    "prestart:android": "npm version patch",
    "start:android": "ionic capacitor run android",
    "prestart:ios": "npm version patch",
    "start:ios": "ionic capacitor run ios",
    "man:build": "echo 'builds project with aot flag and outputs to www folder. use this with extension development in combination with \"npm run ff\".'",
    "prebuild": "npm version patch",
    "build": "ng build --aot --output-path www",
    "postbuild": "npm run man:build",
    "build:ff": "npm run build",
    "build:chrome": "npm run build",
    "build:android": "npm run build && ionic build && ionic capacitor sync android",
    "build:ios": "npm run build && ionic build && ionic capacitor sync ios",
    "build:android:prod": "ionic capacitor build android --prod",
    "build:ios:prod": "ionic capacitor build ios --prod",
    "man:watch": "echo 'builds with aot flag, outputting to www with `-watch` flag enabled for live-reloading. Use this with extension development.'",
    "prewatch": "npm version patch",
    "watch": "ng build --aot --output-path www --watch",
    "postwatch": "npm run man:watch",
    "prewatch:android": "npm version patch",
    "watch:android": "ionic capacitor run android --live-reload",
    "prewatch:ios": "npm version patch",
    "watch:ios": "ionic capacitor run ios --live-reload",
    "presync": "npm version patch",
    "sync": "ionic capacitor sync",
    "presync:android": "npm version patch",
    "sync:android": "ionic capacitor sync android",
    "presync:ios": "npm version patch",
    "sync:ios": "ionic capacitor sync ios",
    "man:ff:createprofiles": "echo 'creates test profiles for ff. each profile retains data between sessions. you can delete profiles in ff at url \"about:profiles\"'",
    "ff:createprofiles": "/Applications/Firefox.app/Contents/MacOS/firefox -CreateProfile \"ibgibtest1\" && /Applications/Firefox.app/Contents/MacOS/firefox -CreateProfile \"ibgibtest2\" && /Applications/Firefox.app/Contents/MacOS/firefox -CreateProfile \"ibgibtest3\"",
    "man:ff": "echo 'ff starts firefox with web-ext. the numbers after are the test profiles, for simultaneous users. the \"none\" is no profile, which does not retain data between sessions.'",
    "ff": "npm run ff:1",
    "ff:chrome": "web-ext run -s './www' -t firefox-desktop -t chromium --firefox-profile=ibgibtest1 --keep-profile-changes --browser-console",
    "man:ff:0": "echo 'runs web-ext ff with a temporary, clean session profile, i.e., does not keep data between sessions.'",
    "ff:0": "web-ext run -s './www' -t firefox-desktop --browser-console",
    "ff:noprofile": "npm run ff:0",
    "man:ff:1": "echo 'runs web-ext ff with ibgibtest1 profile. use ff:createprofiles to do create this'",
    "ff:1": "web-ext run -s './www' -t firefox-desktop --firefox-profile=ibgibtest1 --keep-profile-changes --browser-console",
    "ff:2": "web-ext run -s './www' -t firefox-desktop --firefox-profile=ibgibtest2 --keep-profile-changes --browser-console",
    "ff:3": "web-ext run -s './www' -t firefox-desktop --firefox-profile=ibgibtest3 --keep-profile-changes --browser-console",
    "ff:mobile:android": "web-ext run -s './www' -t firefox-android",
    "chrome": "web-ext run -s './www' -t chromium --keep-profile-changes --browser-console",
    "test": "ng test",
    "lint": "ng lint",
    "e2e": "ng e2e"
  },
  "private": true,
  "dependencies": {
    "@angular-devkit/core": "^13.3.0",
    "@angular-devkit/schematics": "^13.3.0",
    "@angular/common": "~13.1.1",
    "@angular/core": "~13.1.1",
    "@angular/forms": "~13.1.1",
    "@angular/platform-browser": "~13.1.1",
    "@angular/platform-browser-dynamic": "~13.1.1",
    "@angular/router": "~13.1.1",
    "@aws-sdk/client-dynamodb": "^3.43.0",
    "@aws-sdk/client-s3": "^3.49.0",
    "@capacitor/android": "^2.2.1",
    "@capacitor/core": "2.2.1",
    "@capacitor/ios": "^2.2.1",
    "@ionic-native/core": "^5.0.7",
    "@ionic-native/splash-screen": "^5.0.0",
    "@ionic-native/status-bar": "^5.0.0",
    "@ionic/angular": "^6.0.1",
    "@ionic/angular-server": "^6.0.1",
    "@ionic/pwa-elements": "^1.5.2",
    "@schematics/angular": "^13.3.0",
    "circular-dependency-plugin": "^5.2.2",
    "encrypt-gib": "0.1.2",
    "rxjs": "~6.5.1",
    "ts-gib": "^0.3.15",
    "tslib": "^2.0.0",
    "zone.js": "~0.11.4"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "~13.3.0",
    "@angular/cli": "^13.3.0",
    "@angular/compiler": "~13.1.1",
    "@angular/compiler-cli": "^13.1.1",
    "@angular/language-service": "~13.1.1",
    "@capacitor/cli": "2.2.1",
    "@ionic/angular-toolkit": "^3.0.0",
    "@types/jasmine": "~3.5.0",
    "@types/jasminewd2": "~2.0.3",
    "@types/node": "^16.11.11",
    "codelyzer": "^5.1.2",
    "jasmine-core": "~3.5.0",
    "jasmine-spec-reporter": "~5.0.0",
    "karma": "~6.3.9",
    "karma-chrome-launcher": "~3.1.0",
    "karma-coverage-istanbul-reporter": "~3.0.2",
    "karma-jasmine": "~4.0.0",
    "karma-jasmine-html-reporter": "^1.5.0",
    "protractor": "~7.0.0",
    "ts-node": "~8.3.0",
    "tslint": "~6.1.0",
    "typescript": "4.4"
  },
  "description": "An Ionic project"
}
